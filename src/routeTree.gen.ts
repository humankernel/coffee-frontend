/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as ProfileImport } from './routes/_profile'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as PublicStoreIndexImport } from './routes/_public/store/index'
import { Route as ProfileProfileIndexImport } from './routes/_profile/profile.index'
import { Route as DashboardDashboardIndexImport } from './routes/_dashboard/dashboard.index'
import { Route as PublicStoreProductIdImport } from './routes/_public/store/$productId'
import { Route as DashboardDashboardUsersImport } from './routes/_dashboard/dashboard.users'
import { Route as DashboardDashboardSalesImport } from './routes/_dashboard/dashboard.sales'
import { Route as DashboardDashboardReportsImport } from './routes/_dashboard/dashboard.reports'
import { Route as DashboardDashboardOrdersImport } from './routes/_dashboard/dashboard.orders'
import { Route as DashboardDashboardInventoryImport } from './routes/_dashboard/dashboard.inventory'
import { Route as DashboardDashboardCsImport } from './routes/_dashboard/dashboard.cs'

// Create Virtual Routes

const PublicIndexLazyImport = createFileRoute('/_public/')()
const PublicAboutLazyImport = createFileRoute('/_public/about')()

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/_profile',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexLazyRoute = PublicIndexLazyImport.update({
  path: '/',
  getParentRoute: () => PublicRoute,
} as any).lazy(() => import('./routes/_public/index.lazy').then((d) => d.Route))

const PublicAboutLazyRoute = PublicAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => PublicRoute,
} as any).lazy(() => import('./routes/_public/about.lazy').then((d) => d.Route))

const authRegisterRoute = authRegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const PublicStoreIndexRoute = PublicStoreIndexImport.update({
  path: '/store/',
  getParentRoute: () => PublicRoute,
} as any)

const ProfileProfileIndexRoute = ProfileProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => ProfileRoute,
} as any)

const DashboardDashboardIndexRoute = DashboardDashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => DashboardRoute,
} as any)

const PublicStoreProductIdRoute = PublicStoreProductIdImport.update({
  path: '/store/$productId',
  getParentRoute: () => PublicRoute,
} as any)

const DashboardDashboardUsersRoute = DashboardDashboardUsersImport.update({
  path: '/dashboard/users',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardSalesRoute = DashboardDashboardSalesImport.update({
  path: '/dashboard/sales',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardReportsRoute = DashboardDashboardReportsImport.update({
  path: '/dashboard/reports',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardOrdersRoute = DashboardDashboardOrdersImport.update({
  path: '/dashboard/orders',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardInventoryRoute =
  DashboardDashboardInventoryImport.update({
    path: '/dashboard/inventory',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardDashboardCsRoute = DashboardDashboardCsImport.update({
  path: '/dashboard/cs',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_profile': {
      id: '/_profile'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_public/about': {
      id: '/_public/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof PublicAboutLazyImport
      parentRoute: typeof PublicImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexLazyImport
      parentRoute: typeof PublicImport
    }
    '/_dashboard/dashboard/cs': {
      id: '/_dashboard/dashboard/cs'
      path: '/dashboard/cs'
      fullPath: '/dashboard/cs'
      preLoaderRoute: typeof DashboardDashboardCsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/dashboard/inventory': {
      id: '/_dashboard/dashboard/inventory'
      path: '/dashboard/inventory'
      fullPath: '/dashboard/inventory'
      preLoaderRoute: typeof DashboardDashboardInventoryImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/dashboard/orders': {
      id: '/_dashboard/dashboard/orders'
      path: '/dashboard/orders'
      fullPath: '/dashboard/orders'
      preLoaderRoute: typeof DashboardDashboardOrdersImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/dashboard/reports': {
      id: '/_dashboard/dashboard/reports'
      path: '/dashboard/reports'
      fullPath: '/dashboard/reports'
      preLoaderRoute: typeof DashboardDashboardReportsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/dashboard/sales': {
      id: '/_dashboard/dashboard/sales'
      path: '/dashboard/sales'
      fullPath: '/dashboard/sales'
      preLoaderRoute: typeof DashboardDashboardSalesImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/dashboard/users': {
      id: '/_dashboard/dashboard/users'
      path: '/dashboard/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardDashboardUsersImport
      parentRoute: typeof DashboardImport
    }
    '/_public/store/$productId': {
      id: '/_public/store/$productId'
      path: '/store/$productId'
      fullPath: '/store/$productId'
      preLoaderRoute: typeof PublicStoreProductIdImport
      parentRoute: typeof PublicImport
    }
    '/_dashboard/dashboard/': {
      id: '/_dashboard/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_profile/profile/': {
      id: '/_profile/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileProfileIndexImport
      parentRoute: typeof ProfileImport
    }
    '/_public/store/': {
      id: '/_public/store/'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof PublicStoreIndexImport
      parentRoute: typeof PublicImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  DashboardRoute: DashboardRoute.addChildren({
    DashboardDashboardCsRoute,
    DashboardDashboardInventoryRoute,
    DashboardDashboardOrdersRoute,
    DashboardDashboardReportsRoute,
    DashboardDashboardSalesRoute,
    DashboardDashboardUsersRoute,
    DashboardDashboardIndexRoute,
  }),
  ProfileRoute: ProfileRoute.addChildren({ ProfileProfileIndexRoute }),
  PublicRoute: PublicRoute.addChildren({
    PublicAboutLazyRoute,
    PublicIndexLazyRoute,
    PublicStoreProductIdRoute,
    PublicStoreIndexRoute,
  }),
  authLoginRoute,
  authRegisterRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/_profile",
        "/_public",
        "/login",
        "/register"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/dashboard/cs",
        "/_dashboard/dashboard/inventory",
        "/_dashboard/dashboard/orders",
        "/_dashboard/dashboard/reports",
        "/_dashboard/dashboard/sales",
        "/_dashboard/dashboard/users",
        "/_dashboard/dashboard/"
      ]
    },
    "/_profile": {
      "filePath": "_profile.tsx",
      "children": [
        "/_profile/profile/"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/about",
        "/_public/",
        "/_public/store/$productId",
        "/_public/store/"
      ]
    },
    "/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/register": {
      "filePath": "(auth)/register.tsx"
    },
    "/_public/about": {
      "filePath": "_public/about.lazy.tsx",
      "parent": "/_public"
    },
    "/_public/": {
      "filePath": "_public/index.lazy.tsx",
      "parent": "/_public"
    },
    "/_dashboard/dashboard/cs": {
      "filePath": "_dashboard/dashboard.cs.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard/inventory": {
      "filePath": "_dashboard/dashboard.inventory.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard/orders": {
      "filePath": "_dashboard/dashboard.orders.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard/reports": {
      "filePath": "_dashboard/dashboard.reports.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard/sales": {
      "filePath": "_dashboard/dashboard.sales.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard/users": {
      "filePath": "_dashboard/dashboard.users.tsx",
      "parent": "/_dashboard"
    },
    "/_public/store/$productId": {
      "filePath": "_public/store/$productId.tsx",
      "parent": "/_public"
    },
    "/_dashboard/dashboard/": {
      "filePath": "_dashboard/dashboard.index.tsx",
      "parent": "/_dashboard"
    },
    "/_profile/profile/": {
      "filePath": "_profile/profile.index.tsx",
      "parent": "/_profile"
    },
    "/_public/store/": {
      "filePath": "_public/store/index.tsx",
      "parent": "/_public"
    }
  }
}
ROUTE_MANIFEST_END */
