import { describe, it, expect } from "vitest"
import { act, fireEvent, render, screen, waitFor } from "@testing-library/react"
import { LinkList } from "../navbar"
import { LucideBitcoin } from "lucide-react"
import { router } from "@/main"
import { RouterProvider } from "@tanstack/react-router"
import { AuthProvider } from "@/context/auth"

describe("<LinkList />", () => {
    const mockLinks = [
        { label: "A", url: "/a", role: undefined, icon: LucideBitcoin },
        { label: "B", url: "/b", role: undefined, icon: LucideBitcoin },
        { label: "C", url: "/c", role: undefined, icon: LucideBitcoin },
    ]

    const setupComponent = (children: JSX.Element) => {
        return (
            <AuthProvider>
                <RouterProvider router={router} context={{
                    auth: undefined
                }}>
                    {children}
                </RouterProvider>
            </AuthProvider>
        )
    }

    it("should render a list of links", () => {
        render(setupComponent(<LinkList links={mockLinks} />))
        const links = screen.getAllByRole("link")
        expect(links).toHaveLength(3)
    })

    // it("shoud redirect when button is clicked", async () => {
    //     render(<LinkList items={mockLinks} />)
    //     const button = screen.getByRole("button")
    //
    //     act(() => {
    //         fireEvent.click(button)
    //     })
    //
    //     await waitFor(() => {
    //         // to redirect to /a
    //     })
    // })
})

